<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ana Sayfa" xml:space="preserve">
    <value>Ana Sayfa</value>
  </data>
  <data name="Araç" xml:space="preserve">
    <value>Araç</value>
  </data>
  <data name="Araç trafiğini izlemede geleneksel yöntemlerle karşılaştırıldığında Plaka Ceza Sistemi yöntemi daha kararlı ve düşük maliyetlidir. Ayrıca mevcut kamera izleme altyapısı üzerinde kurulum yada yeni bir altyapı gerektirmeden plaka tespiti kolaylıkla yapılabilmektedir. Otoyol ve karayollarında belirli sıklıkta bulunan kameralar kullanılarak plaka tespiti yapılabilir. Plakası tespit edilen araçların ceza, vergi borcu, geçmiş muayene zamanı gibi cezalı durumları varsa kolaylıkla tespit edilip gerekli adli, idari işlemlerin yapılmasını kolaylaştıracaktır. Güvenlik güçlerinin iş yükü en aza indirilerek yollardaki güven ve konfor artırılabilecektir." xml:space="preserve">
    <value>Araç trafiğini izlemede geleneksel yöntemlerle karşılaştırıldığında Plaka Ceza Sistemi yöntemi daha kararlı ve düşük maliyetlidir. Ayrıca mevcut kamera izleme altyapısı üzerinde kurulum yada yeni bir altyapı gerektirmeden plaka tespiti kolaylıkla yapılabilmektedir. Otoyol ve karayollarında belirli sıklıkta bulunan kameralar kullanılarak plaka tespiti yapılabilir. Plakası tespit edilen araçların ceza, vergi borcu, geçmiş muayene zamanı gibi cezalı durumları varsa kolaylıkla tespit edilip gerekli adli, idari işlemlerin yapılmasını kolaylaştıracaktır. Güvenlik güçlerinin iş yükü en aza indirilerek yollardaki güven ve konfor artırılabilecektir.</value>
  </data>
  <data name="Araçlarım" xml:space="preserve">
    <value>Araçlarım</value>
  </data>
  <data name="Gizlilik Sözleşmesi" xml:space="preserve">
    <value>Gizlilik Sözleşmesi</value>
  </data>
  <data name="Hakkımızda" xml:space="preserve">
    <value>Hakkımızda</value>
  </data>
  <data name="Her Hakkı Saklıdır" xml:space="preserve">
    <value>Her Hakkı Saklıdır</value>
  </data>
  <data name="Malİyettekİ Artış Oranı" xml:space="preserve">
    <value>Malİyettekİ Artış Oranı</value>
  </data>
  <data name="Plaka Ceza Sistemi" xml:space="preserve">
    <value>Plaka Ceza Sistemi</value>
  </data>
  <data name="Plaka Ceza Sistemi Modülü ile Araçlarınızı ile ilgili bilgilere ulaşıp detayları görüntüleyebilir, Eğer ihlaleriniz mevcut ise ihlal bilgilerini görüntüleyip ilgili birimlere itirazlarda bulunabilirsiniz." xml:space="preserve">
    <value>Plaka Ceza Sistemi Modülü ile Araçlarınızı ile ilgili bilgilere ulaşıp detayları görüntüleyebilir, Eğer ihlaleriniz mevcut ise ihlal bilgilerini görüntüleyip ilgili birimlere itirazlarda bulunabilirsiniz.</value>
  </data>
  <data name="PLAKA CEZA SİSTEMİ" xml:space="preserve">
    <value>PLAKA CEZA SİSTEMİ</value>
  </data>
  <data name="Plaka Tespİt Algorİtması Doğruluğu" xml:space="preserve">
    <value>Plaka Tespİt Algorİtması Doğruluğu</value>
  </data>
  <data name="Sistem Kararlılığı Oranı" xml:space="preserve">
    <value>Sistem Kararlılığı Oranı</value>
  </data>
  <data name="Sistemimiz, Avrupa ve Türkiye başta olmak üzere bir çok ülke de bulunan araçlar için plaka tespiti altyapısını sağlamaktadır. Bu ülkeler de otoyol, karayolu ve bölünmüş yollar gibi yerlerde kurulmuş olan kamera altyapısının yüksekliği ve açısıgibi etmenleriyle uyumludur." xml:space="preserve">
    <value>Sistemimiz, Avrupa ve Türkiye başta olmak üzere bir çok ülke de bulunan araçlar için plaka tespiti altyapısını sağlamaktadır. Bu ülkeler de otoyol, karayolu ve bölünmüş yollar gibi yerlerde kurulmuş olan kamera altyapısının yüksekliği ve açısıgibi etmenleriyle uyumludur.</value>
  </data>
  <data name="Sİstem Bakımı Artış Oranı" xml:space="preserve">
    <value>Sİstem Bakımı Artış Oranı</value>
  </data>
  <data name="Yollardakİ GÜven ve Konfordakİ Artış Oranı" xml:space="preserve">
    <value>Yollardakİ GÜven ve Konfordakİ Artış Oranı</value>
  </data>
  <data name="Üye" xml:space="preserve">
    <value>Üye</value>
  </data>
  <data name="ÜYE GİRİŞİ" xml:space="preserve">
    <value>ÜYE GİRİŞİ</value>
  </data>
  <data name="ÜYE OL" xml:space="preserve">
    <value>ÜYE OL</value>
  </data>
  <data name="İhlal" xml:space="preserve">
    <value>İhlal</value>
  </data>
  <data name="İhlallerim" xml:space="preserve">
    <value>İhlallerim</value>
  </data>
  <data name="İletişim" xml:space="preserve">
    <value>İletişim</value>
  </data>
  <data name="İtiraz" xml:space="preserve">
    <value>İtiraz</value>
  </data>
  <data name="İtirazlarım" xml:space="preserve">
    <value>İtirazlarım</value>
  </data>
</root>